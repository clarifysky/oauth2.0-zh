# 严谨的八步OAuth
伙计们，在这个教程中，我们将通过构建一个具有复杂的真实生活特性的应用来接触严谨的OAuth，像Facebook的身份认证，处理令牌刷新等等。我们需要大约八个步骤来从一个简单的入门应用做到一个非常复杂的，OAuth机器：

    1、客户端凭证：发起API请求，用于我们的账户。
    2、授权码：获得一个用于别的用户账户的令牌。
    3、通过OAuth登录。
    4、OAuth和Facebook。
    5、JavaScript中的OAuth和Google+。
    6、处理过期的令牌。
    7、使用刷新令牌。
    8、提升安全性。

在练习完这些以后，你将得到你所需要的任何关于OAuth的原理和背景知识。

## OAuth中的微量崩溃课程
目前，你只需要知道，OAuth是一个认证框架。用人类的语言将，就是它将（译者注：应用的）不同的方式定义成了两部分，就像你那炫酷的网站和在你网站上的用户，他们之间可以安全地交换令牌。每一个这种方式都被当作一个授权类型，即使它们看起来不同。每一个授权类型总会发送一个访问令牌。

# OAuth令牌

所以，什么是令牌？他就是一串绑定在我的账户上，能够给你权限来在我这边发起API请求的唯一的字符串。它就像把用户名和密码揉在一起形成的字符串那样。例如，如果`ABCD1234`是一个用于我的Facebook账户的有效的令牌，那么下面这样的HTTP请求就会向我的时间线发送一条信息：

```javascript
POST /weaverryan/feed HTTP/1.1
Host: graph.facebook.com
Content-Type: application/x-www-form-urlencoded
Content-Length: length

access_token=ABCD1234&message=Hello
```

当然，在Facebook，Twitter和其他别的API之间传递访问令牌的方式是不同的，但令牌总是需要的。

我也可以只给你我的用户名和密码，但是令牌是更好的方式。如果给了10个应用访问我的账户的权限，每个应用有它自己的令牌，那就意味着我可以废除一些应用的访问权限，而保留另外一些的。

令牌有有限的使用范围，指的是它的可控范围。不同于能让你对我的账户上做任何事的密码，我可以给你一个能够查看我的Facebook上面的好友，但是不能发送照片墙的令牌。

所以OAuth就像是一个巨大的描述两个部分之间如何交换令牌的规则集。如果我创建了一个网站，然后我想要反问我的朋友的Facebook上面的好友，那一个用户要怎样才能给我一个访问令牌呢？

让我们沿着令人兴奋的令牌失效、刷新令牌、单一登入和别的其他事情类型的主题，来回答这个问题。

我们走！
